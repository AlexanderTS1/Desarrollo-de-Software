<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnBusquedaTesis.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Dxxw8ccPHHDxxw8cc//Z
</value>
  </data>
</root>